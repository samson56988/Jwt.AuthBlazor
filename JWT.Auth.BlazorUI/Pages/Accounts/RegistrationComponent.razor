@page "/registration"
@using System.Text.Json
@using System.Text
@inject HttpClient _http
@inject NavigationManager _navigation


<div class="ma-6 d-flex justify-center">
    <MudChip Color="Color.Primary">
        <h3>User Registration Form</h3>
    </MudChip>
</div>
<div class="ma-6 d-flex justify-center">
    <MudCard width="500px">
        <MudForm Model="registrationModel" @ref="form" Validation="validationModel.ValidateValue">
            <MudCardContent>
                @if (!string.IsNullOrEmpty(APIErrorMessage))
                {
                    <MudChip Color="Color.Error">
                        <p>@APIErrorMessage</p>
                    </MudChip>
                }
                <MudTextField @bind-Value="registrationModel.FirstName"
                              For="@(() => registrationModel.FirstName)"
                              Immediate="true"
                              Label="First Name" />

                <MudTextField @bind-Value="registrationModel.LastName"
                              For="@(() => registrationModel.LastName)"
                              Immediate="true"
                              Label="Last Name" />

                <MudTextField @bind-Value="registrationModel.Email"
                              For="@(() => registrationModel.Email)"
                              Immediate="true"
                              Label="Email" />

                <MudTextField @bind-Value="registrationModel.Password"
                              For="@(() => registrationModel.Password)"
                              Immediate="true"
                              Label="Password" InputType="InputType.Password" />

                <MudTextField @bind-Value="registrationModel.ConfirmPassword"
                              For="@(() => registrationModel.ConfirmPassword)"
                              Immediate="true"
                              Label="Confirm Password" InputType="InputType.Password" />

            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="RegistrationAsync">Register</MudButton>
            </MudCardActions>
        </MudForm>
    </MudCard>
</div>



@code {
    string APIErrorMessage;
    RegistrationVM registrationModel = new RegistrationVM();

    [CascadingParameter]

    public Task<AuthenticationState> AuthState { get; set; }

    RegistrationValidationVm validationModel;

    MudForm form;


    protected  override async Task OnInitializedAsync()
    {
        var user = (await AuthState).User;
        if (user.Identity.IsAuthenticated)
        {
            _navigation.NavigateTo("/");
        }
        validationModel = new RegistrationValidationVm(_http);
        await base.OnInitializedAsync();
    }

    private async Task RegistrationAsync()
    {
        await form.Validate();

        if (form.IsValid)
        {
            var jsonPayLoad = JsonSerializer.Serialize(registrationModel);
            var requestContent = new StringContent(jsonPayLoad, Encoding.UTF8, "application/json");

            var response = await _http.PostAsync("api/user/register", requestContent);

            if(response.StatusCode == System.Net.HttpStatusCode.BadRequest)
            {
                var errors = await response.Content.ReadFromJsonAsync<Dictionary<string, List<string>>>();
                if (errors.Count > 0)
                {
                    foreach(var item in errors)
                    {
                        foreach(var errorMessage in item.Value)
                        {
                            APIErrorMessage = $"{APIErrorMessage} | {errorMessage}";
                        }
                    }
                }
            }
            else if(response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                _navigation.NavigateTo("/registration-confirmation");
            }
            else
            {
                APIErrorMessage = "Failed to register the user, please try after some time";
            }
        }
        else
        {
            APIErrorMessage = "Please fill information";
        }
    }
}
